{"version":3,"sources":["animated_line.js"],"names":["ymaps","modules","define","provide","defineClass","Polyline","vow","AnimatedLine","geometry","properties","options","superclass","constructor","call","_loopTime","_animationTime","get","distance","previousElem","getCoordinates","forEach","elem","getDistance","_animationInterval","_smoothCoords","generateSmoothCoords","start","value","coords","line","loopTime","loop","currentTime","previousTime","length","set","requestAnimationFrame","time","events","fire","reset","setCoordinates","animate","deferred","defer","once","resolve","promise","interval","smoothCoords","push","i","difference","maxAmount","Math","max","abs","minDifference","lastCoord","point1","point2","sqrt","pow"],"mappings":"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","sourcesContent":["ymaps.modules.define('AnimatedLine', [\n    'util.defineClass',\n    'Polyline',\n    'vow'\n], function(provide, defineClass, Polyline, vow) {\n    /**\n     * @fileOverview Анимированная линия.\n     */\n    /**\n     * Создает экземпляр анимированной линии.\n     * @class AnimatedLine. Представляет собой геообъект с геометрией geometry.LineString.\n     * @param {Boolean} [options.animationTime = 4000] Длительность анимации.\n     **/\n    function AnimatedLine(geometry, properties, options) {\n        AnimatedLine.superclass.constructor.call(this, geometry, properties, options);\n        this._loopTime = 50;\n        this._animationTime = this.options.get('animationTime', 4000);\n        // Вычислим длину переданной линии.\n        var distance = 0;\n        var previousElem = geometry[0];\n        this.geometry.getCoordinates().forEach(function(elem) {\n            distance += getDistance(elem, previousElem);\n            previousElem = elem;\n        });\n        // Вычислим минимальный интервал отрисовки.\n        this._animationInterval = distance / this._animationTime * this._loopTime;\n        // Создадим массив с более частым расположением промежуточных точек.\n        this._smoothCoords = generateSmoothCoords(geometry, this._animationInterval);\n    }\n    defineClass(AnimatedLine, Polyline, {\n        // Анимировать линию.\n        start: function() {\n            var value = 0;\n            var coords = this._smoothCoords;\n            var line = this;\n            var loopTime = this._loopTime;\n            // Будем добавлять по одной точке каждые 50 мс.\n            function loop(value, currentTime, previousTime) {\n                if (value < coords.length) {\n                    if (!currentTime || (currentTime - previousTime) > loopTime) {\n                        line.geometry.set(value, coords[value]);\n                        value++;\n                        previousTime = currentTime;\n                    }\n                    requestAnimationFrame(function(time) {\n                        loop(value, time, previousTime || time)\n                    });\n                } else {\n                    // Бросаем событие окончания отрисовки линии.\n                    line.events.fire('animationfinished');\n                }\n            }\n\n            loop(value);\n        },\n        // Убрать отрисованную линию.\n        reset: function() {\n            this.geometry.setCoordinates([]);\n        },\n        // Запустить полный цикл анимации.\n        animate: function() {\n            this.reset();\n            this.start();\n            var deferred = vow.defer();\n            this.events.once('animationfinished', function() {\n                deferred.resolve();\n            });\n            return deferred.promise();\n        }\n\n    });\n    // Функция генерации частых координат по заданной линии.\n    function generateSmoothCoords(coords, interval) {\n        var smoothCoords = [];\n        smoothCoords.push(coords[0]);\n        for (var i = 1; i < coords.length; i++) {\n            var difference = [coords[i][0] - coords[i - 1][0], coords[i][1] - coords[i - 1][1]];\n            var maxAmount = Math.max(Math.abs(difference[0] / interval), Math.abs(difference[1] / interval));\n            var minDifference = [difference[0] / maxAmount, difference[1] / maxAmount];\n            var lastCoord = coords[i - 1];\n            while (maxAmount > 1) {\n                lastCoord = [lastCoord[0] + minDifference[0], lastCoord[1] + minDifference[1]];\n                smoothCoords.push(lastCoord);\n                maxAmount--;\n            }\n            smoothCoords.push(coords[i])\n        }\n        return smoothCoords;\n    }\n    // Функция нахождения расстояния между двумя точками на плоскости.\n    function getDistance(point1, point2) {\n        return Math.sqrt(\n            Math.pow((point2[0] - point1[0]), 2) +\n            Math.pow((point2[1] - point1[1]), 2)\n        );\n    }\n    provide(AnimatedLine);\n});"],"file":"animated_line.js"}